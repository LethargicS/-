///快速幂取模  根据d=ab mod n=(…((((a mod n)*a)mod n)*a)mod n…*a)mod n    {共b个a}
///并将b转化成二进制数  利用
///a2c mod n =(ac)2 mod n    bi=0
///a2c+1 mod n =a*(ac)2 mod n   bi=1 (0<=c<=b) 多次迭代得出结果
#include<cstdio>
using namespace std;
#define long long LL
LL fun(LL x,LL n)
{
    LL res=1;
    while(n){
        if(n & 1) res=(res*x)%Max;
        x=(x*x)%MAX;
        n>>=1;
    }
    return res;
}

///可以用快速乘法进行优化

#include <stdio.h>
#define LL long long
///快速乘法
long long quick_mul(long long a , long long b , long long m)
{
    long long ans = 0 ;
    while (b){
        if (b & 1)
            ans = (ans + a) % m ;
        a = (a + a) % m ;
        b >>= 1 ;
    }
    return ans ;
}
///快速幂
long long quick_pow(long long a , long long b , long long m)
{
    long long ans = 1 ;
    while (b){
        if (b & 1)
            ans = quick_mul(ans , a , m);
        a = quick_mul(a , a , m) ;
        b >>= 1 ;
    }
    return ans ;
}

int T ;
LL a , b , c ;


int main ()
{
    scanf ("%d" , &T) ;
    while (T--){
        scanf ("%lld%lld%lld" , &a , &b , &c) ;
        printf ("%lld\n" , quick_pow(a , b , c)) ;
    }
}
